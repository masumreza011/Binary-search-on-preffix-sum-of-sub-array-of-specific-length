#include<bits/stdc++.h>
using ll=long long;
using namespace std;
bool check(vector<ll>&v, vector<ll>&preff, ll len, ll sum){
     ll n=v.size();
     if(preff[len-1]>=sum)return true;
     for(ll i=len;i<n;i++){
          if(preff[i]+preff[i-len]>=sum)return true;
     }
     return false;


}
int main(){
     ll n,target;cin>>n>>target;
     vector<ll>v(n),v1(n);
     for(auto &i:v)cin>>i;
     vector<ll>preff(n,0);
     preff[0]=v[0];
     for(int i =1;i<n;i++){
          preff[i]=preff[i-1]+v[i];
     }
         ll l=1;
         ll r=n;
         ll ans=-1;
        while(l<=r){
        ll mid=(l+r)/2;
         if(check(v,preff,mid,target)){
           ans=mid;
           r=mid-1;
         }else l=mid+1;
       }
     cout<<ans+1<<endl;

     //O(nlog(n))
     /*
     Target : 7
     array : {2,3,1,2,4,3}
     output : 2
     Explanation : The sub array {4,3} has the miniml length under the problem constraint


    */
  return  0;
}
